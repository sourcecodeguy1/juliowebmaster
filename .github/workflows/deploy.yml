name: Deploy Project
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16.14.0
        uses: actions/setup-node@v1
        with:
          node-version: '16.14'

      - name: Install yarn and run unittest
        run: |
          cd client
          yarn
          yarn test
        env:
          CI: true

      - name: Build Docker Test Image for Client
        run: |
          docker build -t client-test-image -f client/src/deploy-dockerfile-tests/Dockerfile.test client

      - name: Build Docker Test Image for Server
        run: |
          docker build -t server-test-image -f server/dockerfile-tests/Dockerfile.test server

  push-image-to-docker-hub:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set APP_VERSION (CalVer-SHA, Docker-safe)
        run: echo "APP_VERSION=$(date +'%Y.%m.%d')-${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      - name: Build and Push Client
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod
      - name: Build and Push Node JS Server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:${{ env.APP_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:latest

  deploy:
    needs: push-image-to-docker-hub
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vultr Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
              cd ${{ secrets.DIRECTORY }}
              docker-compose down
              docker-compose pull && docker-compose up --build -d
