name: Deploy Project
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16.14.0
        uses: actions/setup-node@v1
        with:
          node-version: '16.14'

      - name: Install yarn and run unittest
        run: |
          cd client
          yarn
          yarn test
        env:
          CI: true

      - name: Check Dockerfile for (Client)
        run: |
          docker build -t my-test-image -f client/Dockerfile client
          docker run --rm -e PATH="/usr/local/bin:${PATH}" -w /usr/src/app my-test-image sh -c "ls -al && cat ${PATH}/package.json"
    # Add more debugging commands as needed

      - name: Check Dockerfile for (Server)
        run: |
          docker build -t my-test-image -f server/Dockerfile server
          docker run --rm -e PATH="/usr/local/bin:${PATH}" my-test-image yarn install

  push-image-to-docker-hub:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      - name: Build and Push Client
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod
      - name: Build and Push Node JS Server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:latest

  deploy:
    needs: push-image-to-docker-hub
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vultr Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
              cd ${{ secrets.DIRECTORY }}
              docker-compose down
              docker-compose pull && docker-compose up --build -d
