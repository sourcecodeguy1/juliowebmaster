name: Deploy Project
on:
  push:
    branches:
      - master
jobs:
  push-image-to-docker-hub:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.version.outputs.app_version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set APP_VERSION (CalVer-SHA, Docker-safe)
        id: version
        run: echo "app_version=$(date +'%Y.%m.%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Client
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ steps.version.outputs.app_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

      - name: Build and Push Node JS Server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          build-args: |
            APP_VERSION=${{ steps.version.outputs.app_version }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:${{ steps.version.outputs.app_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:latest

  deploy:
    needs: push-image-to-docker-hub
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vultr Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            cd ${{ secrets.DIRECTORY }}
            export CLIENT_TAG='${{ needs.push-image-to-docker-hub.outputs.app_version }}'
            export SERVER_TAG='${{ needs.push-image-to-docker-hub.outputs.app_version }}'

            echo "Pulling versioned Docker images for juliowebmaster..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${CLIENT_TAG}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_DOCKER_REPO }}:${SERVER_TAG}

            echo "Restarting juliowebmaster services (client & api only)..."
            docker-compose up -d client api

            echo "Deployment completed! âœ…"
